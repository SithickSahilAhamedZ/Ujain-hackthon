import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';

type Language = 'en' | 'hi';

interface Translations {
  [key: string]: string;
}

const resources: Record<Language, Translations> = {
  en: {
    home: 'Home',
    navigation: 'Navigation',
    booking: 'Booking',
    emergency: 'Emergency',
    report: 'Report',
    gallery: 'Gallery',
    settings: 'Settings',
    about: 'About',
    analytics: 'Analytics',
    language: 'Language',
    assistantInitialGreeting: 'Hello! I am your PilgrimPath assistant. How can I help you today?',
    headerSearchPlaceholder: 'Search temples, services, help...',
    assistantTitle: 'PilgrimPath Assistant',
    listening: 'Listening...',
    languageLabel: 'Language:',
    typeYourMessage: 'Type your message...',
    welcomePilgrim: 'Welcome, Pilgrim',
    dashboardTitle: 'Ujjain Simhastha Dashboard',
    highCrowdAlert: 'High Crowd Alert',
    highCrowdAlertDesc: 'High crowd density reported near Mahakaleshwar Temple.',
    viewMap: 'View Map',
    needHelp: 'Need Help?',
    askAIAssistant: 'Ask our AI assistant',
    startChat: 'Start Chat',
    dailyNeeds: 'Daily Needs',
    spiritualSafety: 'Spiritual & Safety',
    ride: 'Ride',
    stay: 'Stay',
    food: 'Food',
    water: 'Water',
    holySite: 'Holy Site',
    doctor: 'Doctor',
    navigationTitle: 'Navigation & Maps',
    crowdLevels: 'Crowd Levels',
    live: 'Live',
    crowdLevelPopup: 'Crowd Level: {level}',
    suggestedRoute: 'Suggested Route',
    safestRoute: 'Safest Route: Via Harsiddhi Temple',
    safestRouteDesc: 'Low crowd density reported.',
    nearbyAmenities: 'Nearby Amenities',
    waterStation: 'Water Station',
    foodStall: 'Food Stall',
    policeStationAmenity: 'Police Station',
    ambulanceAmenity: 'Ambulance',
    distanceAway: '{distance}m away',
    markerTypeUser: 'Your Location',
    markerTypeTemple: 'Temple',
    markerTypeGhat: 'Ghat',
    markerTypePolice: 'Police Station',
    markerTypeAmbulance: 'Ambulance Point',
    markerTypeAmenity: 'Amenity',
    chooseYourRoute: 'Choose Your Route',
    aiRecommended: 'AI Recommended',
    shortestPath: 'Shortest Path',
    startNavigation: 'Start Navigation',
    low: 'Low',
    medium: 'Medium',
    high: 'High',
    critical: 'Critical',
    routeSelection: 'Route Selection',
    startDestination: 'Start Destination',
    endDestination: 'End Destination',
    findRoute: 'Find Route',
    directPath: 'Direct Path',
    directPathDesc: 'Showing the most direct path from {start} to {end}.',
    routePlanning: 'Route Planning',
    aiRoutesNotAvailable: 'AI & Shortest paths are only available for routes starting from Your Location.',
    aiRecommendedRouteName: 'AI Recommended Route',
    aiRecommendedRouteDesc: 'Safest route: Via Harsiddhi Temple. Low crowd density reported.',
    shortestPathRouteName: 'Shortest Path',
    shortestPathRouteDesc: 'Most direct route. May have higher crowd density.',
    saferPathDesc: 'Suggesting a safer path from {start} to {end}, avoiding potential congestion.',
    bookingCentre: 'Booking Centre',
    transport: 'Transport',
    departureDateTime: 'Departure Date & Time',
    vehiclesAvailable: 'Vehicle Available',
    optionsFound: '({count} options found)',
    filter: 'Filter',
    perPerson: '/person',
    bookNow: 'Book Now',
    checkIn: 'Check In',
    checkOut: 'Check Out',
    accommodationAvailable: 'Accommodation Available',
    perNight: '/night',
    confirmBooking: 'Confirm Booking',
    date: 'Date:',
    time: 'Time:',
    fromTo: 'From/To:',
    location: 'Location:',
    total: 'Total:',
    cancel: 'Cancel',
    confirmAndPay: 'Confirm & Pay',
    bookingConfirmed: 'Booking Confirmed!',
    bookingSuccessMessage: 'Your booking for "{itemName}" has been successfully confirmed. A confirmation has been sent to your registered contact details.',
    done: 'Done',
    emergencyServices: 'Emergency Services',
    sos: 'SOS',
    sosHelpText: 'Press and hold for emergency assistance',
    emergencyAssist: 'Emergency Assist',
    accident: 'Accident',
    accidentDesc: 'Vehicle or traffic incidents',
    medical: 'Medical',
    medicalDesc: 'Health emergencies',
    issue: 'Issue',
    issueDesc: 'General safety concerns',
    lostAndFound: 'Lost & Found',
    lostAndFoundDesc: 'Report missing persons or items',
    theftHarassment: 'Theft / Harassment',
    theftHarassmentDesc: 'Report criminal activity or misconduct',
    liveLocationSharing: 'Live Location Sharing',
    currentLocation: 'Current Location',
    active: 'Active',
    locationSharingDisabled: 'Location sharing is currently disabled',
    shareLocation: 'Share Location',
    activeAlerts: 'Active Alerts',
    lostPerson: 'Lost Person',
    team: 'Team:',
    police: 'Police',
    minsAgo: '{count} mins ago',
    recentAlerts: 'Recent Alerts',
    medicalEmergency: 'Medical Emergency',
    hoursAgo: '{count} hours ago',
    resolved: 'Resolved',
    trafficAccident: 'Traffic Accident',
    emergencyContacts: 'Emergency Contacts',
    ambulance: 'Ambulance',
    call: 'Call',
    fireBrigade: 'Fire Brigade',
    disasterManagement: 'Disaster Management',
    womensHelpline: 'Women\'s Helpline',
    childHelpline: 'Child Helpline',
    incidentReport: 'Incident Report',
    yourRole: 'Your Role',
    issueType: 'Issue Type',
    priorityLevel: 'Priority Level',
    reportDetails: 'Report Details',
    locationPlaceholder: 'e.g., Main Stage Area, Section A, Booth 3',
    descriptionPlaceholder: 'Please describe the issue in detail...',
    chars: 'characters',
    attachPhoto: 'Attach a Photo (Optional)',
    clickToUpload: 'Click to upload',
    fileTypes: 'PNG, JPG, or GIF',
    submitReport: 'Submit Report',
    visitor: 'Visitor',
    visitorDesc: 'General visitor',
    security: 'Security',
    securityDesc: 'Security personnel',
    volunteer: 'Volunteer',
    volunteerDesc: 'Event volunteer',
    medicalStaff: 'Medical staff',
    vendor: 'Vendor',
    vendorDesc: 'Vendor/Staff',
    galleryTitle: 'Gallery',
    galleryModalTitle: 'Image Preview',
    settingsTitle: 'Settings',
    aboutTitle: 'About PilgrimPath',
    underConstruction: 'Under Construction',
    galleryMessage: "This page is currently under development. Soon, you'll be able to browse a gallery of beautiful moments from the Ujjain Simhastha.",
    aboutMessage: "This page is currently under development. Soon, you'll find information about the PilgrimPath mission, our team, and contact details here.",
    notifications: 'Notifications',
    toggleNotifications: 'Toggle notifications',
    medicalEmergencyResolved: 'Medical Emergency Resolved',
    medicalEmergencyResolvedDesc: 'The incident near Ram Ghat has been cleared.',
    viewAll: 'View All',
    closeNotification: 'Close notification',
    voiceSearch: 'Voice Search',
    generalSettings: 'General',
    theme: 'Theme',
    light: 'Light',
    dark: 'Dark',
    system: 'System',
    notificationSettings: 'Notification Settings',
    crowdAlerts: 'Crowd Alerts',
    bookingConfirmations: 'Booking Confirmations',
    emergencyUpdates: 'Emergency Updates',
    accountSettings: 'Account',
    loggedInAs: 'Logged in as',
    pilgrim: 'Pilgrim',
    editProfile: 'Edit Profile',
    changePassword: 'Change Password',
    logout: 'Logout',
    ourMission: 'Our Mission',
    ourMissionDesc: 'To provide a safe, seamless, and spiritually enriching experience for every pilgrim at the Ujjain Simhastha through innovative technology and real-time information.',
    ourTech: 'Our Technology',
    ourTechDesc1: 'PilgrimPath is built on a modern, responsive web stack, ensuring a fast and reliable experience on any device. We leverage real-time data processing for live crowd monitoring and instant alerts.',
    ourTechDesc2: 'Our core features are powered by advanced AI, including a voice-enabled assistant for intuitive interaction and intelligent routing algorithms to suggest the safest paths.',
    theApp: 'The PilgrimPath App',
    theAppDesc: 'Your all-in-one digital companion for the Ujjain Simhastha.',
    keyFeatures: 'Key Features',
    featureNav: 'Real-time Navigation & Crowd Info',
    featureBooking: 'Easy Transport & Stay Bookings',
    featureEmergency: 'Instant SOS & Emergency Services',
    meetTheTeam: 'Meet the Team',
    teamMember1Name: 'Aarav Sharma',
    teamMember1Role: 'Lead Developer',
    teamMember2Name: 'Priya Mehta',
    teamMember2Role: 'UX/UI Designer',
    teamMember3Name: 'Rohan Desai',
    teamMember3Role: 'AI & Data Scientist',
    todaysHighlights: "Today's Highlights",
    mainEvent: 'Main Event:',
    eveningAarti: 'Evening Aarti at Ram Ghat',
    weather: 'Weather:',
    weatherInfo: '28Â°C, Clear Skies',
    filters: 'Filters',
    busType: 'Bus Type',
    ac: 'AC',
    nonAc: 'Non-AC',
    sleeper: 'Sleeper',
    amenities: 'Amenities',
    wifi: 'Wi-Fi',
    chargingPort: 'Charging Port',
    applyFilters: 'Apply Filters',
    propertyType: 'Property Type',
    hotel: 'Hotel',
    dormitory: 'Dormitory',
    priceRange: 'Price Range (Max)',
    sortBy: 'Sort by:',
    priceLowHigh: 'Price: Low to High',
    priceHighLow: 'Price: High to Low',
    rating: 'Rating',
    guestRating: 'Guest Rating',
    any: 'Any',
    excellent4_5: '4.5+ Excellent',
    veryGood4: '4.0+ Very Good',
    roomService: 'Room Service',
    templeView: 'Temple View',
    waterBottle: 'Water Bottle',
    userLogin: 'User Login',
    adminLogin: 'Admin Login',
    loginPrompt: 'Login to your {type} account',
    user: 'User',
    admin: 'Admin',
    emailAddress: 'Email Address',
    password: 'Password',
    forgotPassword: 'Forgot Password?',
    login: 'Login',
    noAccountPrompt: "Don't have an account?",
    signUp: 'Sign Up',
    analyticsTitle: 'Analytics Dashboard',
    liveCrowdCount: 'Live Crowd Count',
    bookingsToday: 'Bookings Today',
    incidentsToday: 'Incidents Today',
    bookingTrends: 'Booking Trends',
    past7Days: 'Past 7 Days',
    incidentReports: 'Incident Reports',
    byType: 'By Type',
    peakHours: 'Peak Crowd Hours',
    peakHoursDesc: 'Crowd distribution based on entry data',
  },
  hi: {
    home: 'à¤¹à¥à¤®',
    navigation: 'à¤¨à¥à¤µà¤¿à¤à¥à¤¶à¤¨',
    booking: 'à¤¬à¥à¤à¤¿à¤à¤',
    emergency: 'à¤à¤ªà¤¾à¤¤à¤à¤¾à¤²',
    report: 'à¤°à¤¿à¤ªà¥à¤°à¥à¤',
    gallery: 'à¤à¥à¤²à¤°à¥',
    settings: 'à¤¸à¥à¤à¤¿à¤à¤à¥à¤¸',
    about: 'à¤¬à¤¾à¤°à¥ à¤®à¥à¤',
    analytics: 'à¤à¤¨à¤¾à¤²à¤¿à¤à¤¿à¤à¥à¤¸',
    language: 'à¤­à¤¾à¤·à¤¾',
    assistantInitialGreeting: 'à¤¨à¤®à¤¸à¥à¤¤à¥! à¤®à¥à¤ à¤à¤ªà¤à¤¾ à¤ªà¤¿à¤²à¥à¤à¥à¤°à¤¿à¤®à¤ªà¤¾à¤¥ à¤¸à¤¹à¤¾à¤¯à¤ à¤¹à¥à¤à¥¤ à¤®à¥à¤ à¤à¤ à¤à¤ªà¤à¥ à¤à¥à¤¸à¥ à¤®à¤¦à¤¦ à¤à¤° à¤¸à¤à¤¤à¤¾ à¤¹à¥à¤?',
    headerSearchPlaceholder: 'à¤®à¤à¤¦à¤¿à¤°, à¤¸à¥à¤µà¤¾à¤à¤, à¤¸à¤¹à¤¾à¤¯à¤¤à¤¾ à¤à¥à¤à¥à¤...',
    assistantTitle: 'à¤ªà¤¿à¤²à¥à¤à¥à¤°à¤¿à¤®à¤ªà¤¾à¤¥ à¤¸à¤¹à¤¾à¤¯à¤',
    listening: 'à¤¸à¥à¤¨ à¤°à¤¹à¤¾ à¤¹à¥à¤...',
    languageLabel: 'à¤­à¤¾à¤·à¤¾:',
    typeYourMessage: 'à¤à¤ªà¤¨à¤¾ à¤¸à¤à¤¦à¥à¤¶ à¤²à¤¿à¤à¥à¤...',
    welcomePilgrim: 'à¤à¤ªà¤à¤¾ à¤¸à¥à¤µà¤¾à¤à¤¤ à¤¹à¥, à¤¤à¥à¤°à¥à¤¥à¤¯à¤¾à¤¤à¥à¤°à¥',
    dashboardTitle: 'à¤à¤à¥à¤à¥à¤¨ à¤¸à¤¿à¤à¤¹à¤¸à¥à¤¥ à¤¡à¥à¤¶à¤¬à¥à¤°à¥à¤¡',
    highCrowdAlert: 'à¤à¤§à¤¿à¤ à¤­à¥à¤¡à¤¼ à¤à¥ à¤à¥à¤¤à¤¾à¤µà¤¨à¥',
    highCrowdAlertDesc: 'à¤®à¤¹à¤¾à¤à¤¾à¤²à¥à¤¶à¥à¤µà¤° à¤®à¤à¤¦à¤¿à¤° à¤à¥ à¤ªà¤¾à¤¸ à¤à¤§à¤¿à¤ à¤­à¥à¤¡à¤¼ à¤à¥ à¤¸à¥à¤à¤¨à¤¾ à¤¹à¥à¥¤',
    viewMap: 'à¤¨à¤à¥à¤¶à¤¾ à¤¦à¥à¤à¥à¤',
    needHelp: 'à¤®à¤¦à¤¦ à¤à¤¾à¤¹à¤¿à¤?',
    askAIAssistant: 'à¤¹à¤®à¤¾à¤°à¥ AI à¤¸à¤¹à¤¾à¤¯à¤ à¤¸à¥ à¤ªà¥à¤à¥à¤',
    startChat: 'à¤à¥à¤ à¤¶à¥à¤°à¥ à¤à¤°à¥à¤',
    dailyNeeds: 'à¤¦à¥à¤¨à¤¿à¤ à¤à¤µà¤¶à¥à¤¯à¤à¤¤à¤¾à¤à¤',
    spiritualSafety: 'à¤à¤§à¥à¤¯à¤¾à¤¤à¥à¤®à¤¿à¤ à¤à¤° à¤¸à¥à¤°à¤à¥à¤·à¤¾',
    ride: 'à¤¸à¤µà¤¾à¤°à¥',
    stay: 'à¤°à¤¹à¤¨à¤¾',
    food: 'à¤­à¥à¤à¤¨',
    water: 'à¤ªà¤¾à¤¨à¥',
    holySite: 'à¤ªà¤µà¤¿à¤¤à¥à¤° à¤¸à¥à¤¥à¤²',
    doctor: 'à¤à¤¿à¤à¤¿à¤¤à¥à¤¸à¤',
    navigationTitle: 'à¤¨à¥à¤µà¤¿à¤à¥à¤¶à¤¨ à¤à¤° à¤¨à¤à¥à¤¶à¥',
    crowdLevels: 'à¤­à¥à¤¡à¤¼ à¤à¤¾ à¤¸à¥à¤¤à¤°',
    live: 'à¤²à¤¾à¤à¤µ',
    crowdLevelPopup: 'à¤­à¥à¤¡à¤¼ à¤à¤¾ à¤¸à¥à¤¤à¤°: {level}',
    suggestedRoute: 'à¤¸à¥à¤à¤¾à¤¯à¤¾ à¤à¤¯à¤¾ à¤®à¤¾à¤°à¥à¤',
    safestRoute: 'à¤¸à¤¬à¤¸à¥ à¤¸à¥à¤°à¤à¥à¤·à¤¿à¤¤ à¤®à¤¾à¤°à¥à¤: à¤¹à¤°à¤¸à¤¿à¤¦à¥à¤§à¤¿ à¤®à¤à¤¦à¤¿à¤° à¤à¥ à¤®à¤¾à¤§à¥à¤¯à¤® à¤¸à¥',
    safestRouteDesc: 'à¤à¤® à¤­à¥à¤¡à¤¼ à¤à¤¨à¤¤à¥à¤µ à¤à¥ à¤¸à¥à¤à¤¨à¤¾ à¤¹à¥à¥¤',
    nearbyAmenities: 'à¤à¤¸-à¤ªà¤¾à¤¸ à¤à¥ à¤¸à¥à¤µà¤¿à¤§à¤¾à¤à¤',
    waterStation: 'à¤ªà¤¾à¤¨à¥ à¤¸à¥à¤à¥à¤¶à¤¨',
    foodStall: 'à¤­à¥à¤à¤¨ à¤¸à¥à¤à¥à¤²',
    policeStationAmenity: 'à¤ªà¥à¤²à¤¿à¤¸ à¤¸à¥à¤à¥à¤¶à¤¨',
    ambulanceAmenity: 'à¤à¤®à¥à¤¬à¥à¤²à¥à¤à¤¸',
    distanceAway: '{distance} à¤®à¥à¤à¤° à¤¦à¥à¤°',
    markerTypeUser: 'à¤à¤ªà¤à¥ à¤²à¥à¤à¥à¤¶à¤¨',
    markerTypeTemple: 'à¤®à¤à¤¦à¤¿à¤°',
    markerTypeGhat: 'à¤à¤¾à¤',
    markerTypePolice: 'à¤ªà¥à¤²à¤¿à¤¸ à¤¸à¥à¤à¥à¤¶à¤¨',
    markerTypeAmbulance: 'à¤à¤®à¥à¤¬à¥à¤²à¥à¤à¤¸ à¤ªà¥à¤à¤à¤',
    markerTypeAmenity: 'à¤¸à¥à¤µà¤¿à¤§à¤¾',
    chooseYourRoute: 'à¤à¤ªà¤¨à¤¾ à¤®à¤¾à¤°à¥à¤ à¤à¥à¤¨à¥à¤',
    aiRecommended: 'AI à¤à¤¨à¥à¤¶à¤à¤¸à¤¿à¤¤',
    shortestPath: 'à¤¸à¤¬à¤¸à¥ à¤à¥à¤à¤¾ à¤°à¤¾à¤¸à¥à¤¤à¤¾',
    startNavigation: 'à¤¨à¥à¤µà¤¿à¤à¥à¤¶à¤¨ à¤¶à¥à¤°à¥ à¤à¤°à¥à¤',
    low: 'à¤à¤®',
    medium: 'à¤®à¤§à¥à¤¯à¤®',
    high: 'à¤à¤§à¤¿à¤',
    critical: 'à¤à¤à¤­à¥à¤°',
    routeSelection: 'à¤®à¤¾à¤°à¥à¤ à¤à¤¯à¤¨',
    startDestination: 'à¤ªà¥à¤°à¤¾à¤°à¤à¤­ à¤à¤à¤¤à¤µà¥à¤¯',
    endDestination: 'à¤à¤à¤¤à¤¿à¤® à¤à¤à¤¤à¤µà¥à¤¯',
    findRoute: 'à¤®à¤¾à¤°à¥à¤ à¤à¥à¤à¥à¤',
    directPath: 'à¤¸à¥à¤§à¤¾ à¤°à¤¾à¤¸à¥à¤¤à¤¾',
    directPathDesc: '{start} à¤¸à¥ {end} à¤¤à¤ à¤à¤¾ à¤¸à¤¬à¤¸à¥ à¤¸à¥à¤§à¤¾ à¤®à¤¾à¤°à¥à¤ à¤¦à¤¿à¤à¤¾à¤¯à¤¾ à¤à¤¾ à¤°à¤¹à¤¾ à¤¹à¥à¥¤',
    routePlanning: 'à¤®à¤¾à¤°à¥à¤ à¤¯à¥à¤à¤¨à¤¾',
    aiRoutesNotAvailable: 'à¤à¤à¤ à¤à¤° à¤¸à¤¬à¤¸à¥ à¤à¥à¤à¥ à¤°à¤¾à¤¸à¥à¤¤à¥ à¤à¥à¤µà¤² à¤à¤ªà¤à¥ à¤¸à¥à¤¥à¤¾à¤¨ à¤¸à¥ à¤¶à¥à¤°à¥ à¤¹à¥à¤¨à¥ à¤µà¤¾à¤²à¥ à¤®à¤¾à¤°à¥à¤à¥à¤ à¤à¥ à¤²à¤¿à¤ à¤à¤ªà¤²à¤¬à¥à¤§ à¤¹à¥à¤à¥¤',
    aiRecommendedRouteName: 'AI à¤à¤¨à¥à¤¶à¤à¤¸à¤¿à¤¤ à¤®à¤¾à¤°à¥à¤',
    aiRecommendedRouteDesc: 'à¤¸à¤¬à¤¸à¥ à¤¸à¥à¤°à¤à¥à¤·à¤¿à¤¤ à¤®à¤¾à¤°à¥à¤: à¤¹à¤°à¤¸à¤¿à¤¦à¥à¤§à¤¿ à¤®à¤à¤¦à¤¿à¤° à¤à¥ à¤®à¤¾à¤§à¥à¤¯à¤® à¤¸à¥à¥¤ à¤à¤® à¤­à¥à¤¡à¤¼ à¤à¤¨à¤¤à¥à¤µ à¤à¥ à¤¸à¥à¤à¤¨à¤¾ à¤¹à¥à¥¤',
    shortestPathRouteName: 'à¤¸à¤¬à¤¸à¥ à¤à¥à¤à¤¾ à¤°à¤¾à¤¸à¥à¤¤à¤¾',
    shortestPathRouteDesc: 'à¤¸à¤¬à¤¸à¥ à¤¸à¥à¤§à¤¾ à¤®à¤¾à¤°à¥à¤à¥¤ à¤à¤¸à¤®à¥à¤ à¤à¤§à¤¿à¤ à¤­à¥à¤¡à¤¼ à¤¹à¥ à¤¸à¤à¤¤à¥ à¤¹à¥à¥¤',
    saferPathDesc: '{start} à¤¸à¥ {end} à¤¤à¤ à¤à¤ à¤¸à¥à¤°à¤à¥à¤·à¤¿à¤¤ à¤®à¤¾à¤°à¥à¤ à¤¸à¥à¤à¤¾à¤¯à¤¾ à¤à¤¾ à¤°à¤¹à¤¾ à¤¹à¥, à¤¸à¤à¤­à¤¾à¤µà¤¿à¤¤ à¤­à¥à¤¡à¤¼à¤­à¤¾à¤¡à¤¼ à¤¸à¥ à¤¬à¤à¤¤à¥ à¤¹à¥à¤à¥¤',
    bookingCentre: 'à¤¬à¥à¤à¤¿à¤à¤ à¤à¥à¤à¤¦à¥à¤°',
    transport: 'à¤ªà¤°à¤¿à¤µà¤¹à¤¨',
    departureDateTime: 'à¤ªà¥à¤°à¤¸à¥à¤¥à¤¾à¤¨ à¤à¥ à¤¤à¤¾à¤°à¥à¤ à¤à¤° à¤¸à¤®à¤¯',
    vehiclesAvailable: 'à¤µà¤¾à¤¹à¤¨ à¤à¤ªà¤²à¤¬à¥à¤§',
    optionsFound: '({count} à¤µà¤¿à¤à¤²à¥à¤ª à¤®à¤¿à¤²à¥)',
    filter: 'à¤«à¤¼à¤¿à¤²à¥à¤à¤°',
    perPerson: '/à¤µà¥à¤¯à¤à¥à¤¤à¤¿',
    bookNow: 'à¤à¤­à¥ à¤¬à¥à¤ à¤à¤°à¥à¤',
    checkIn: 'à¤à¥à¤ à¤à¤¨',
    checkOut: 'à¤à¥à¤ à¤à¤à¤',
    accommodationAvailable: 'à¤à¤µà¤¾à¤¸ à¤à¤ªà¤²à¤¬à¥à¤§',
    perNight: '/à¤°à¤¾à¤¤',
    confirmBooking: 'à¤¬à¥à¤à¤¿à¤à¤ à¤à¥ à¤ªà¥à¤·à¥à¤à¤¿ à¤à¤°à¥à¤',
    date: 'à¤¦à¤¿à¤¨à¤¾à¤à¤:',
    time: 'à¤¸à¤®à¤¯:',
    fromTo: 'à¤¸à¥/à¤¤à¤:',
    location: 'à¤¸à¥à¤¥à¤¾à¤¨:',
    total: 'à¤à¥à¤²:',
    cancel: 'à¤°à¤¦à¥à¤¦ à¤à¤°à¥à¤',
    confirmAndPay: 'à¤ªà¥à¤·à¥à¤à¤¿ à¤à¤°à¥à¤ à¤à¤° à¤­à¥à¤à¤¤à¤¾à¤¨ à¤à¤°à¥à¤',
    bookingConfirmed: 'à¤¬à¥à¤à¤¿à¤à¤ à¤à¥ à¤ªà¥à¤·à¥à¤à¤¿ à¤¹à¥ à¤à¤!',
    bookingSuccessMessage: '"{itemName}" à¤à¥ à¤²à¤¿à¤ à¤à¤ªà¤à¥ à¤¬à¥à¤à¤¿à¤à¤ à¤¸à¤«à¤²à¤¤à¤¾à¤ªà¥à¤°à¥à¤µà¤ à¤ªà¥à¤·à¥à¤à¤¿ à¤¹à¥ à¤à¤ à¤¹à¥à¥¤ à¤à¤ªà¤à¥ à¤ªà¤à¤à¥à¤à¥à¤¤ à¤¸à¤à¤ªà¤°à¥à¤ à¤µà¤¿à¤µà¤°à¤£ à¤ªà¤° à¤à¤ à¤ªà¥à¤·à¥à¤à¤¿à¤à¤°à¤£ à¤­à¥à¤à¤¾ à¤à¤¯à¤¾ à¤¹à¥à¥¤',
    done: 'à¤¹à¥ à¤à¤¯à¤¾',
    emergencyServices: 'à¤à¤ªà¤¾à¤¤à¤à¤¾à¤²à¥à¤¨ à¤¸à¥à¤µà¤¾à¤à¤',
    sos: 'SOS',
    sosHelpText: 'à¤à¤ªà¤¾à¤¤à¤à¤¾à¤²à¥à¤¨ à¤¸à¤¹à¤¾à¤¯à¤¤à¤¾ à¤à¥ à¤²à¤¿à¤ à¤¦à¤¬à¤¾à¤à¤° à¤°à¤à¥à¤',
    emergencyAssist: 'à¤à¤ªà¤¾à¤¤à¤à¤¾à¤²à¥à¤¨ à¤¸à¤¹à¤¾à¤¯à¤¤à¤¾',
    accident: 'à¤¦à¥à¤°à¥à¤à¤à¤¨à¤¾',
    accidentDesc: 'à¤µà¤¾à¤¹à¤¨ à¤¯à¤¾ à¤¯à¤¾à¤¤à¤¾à¤¯à¤¾à¤¤ à¤¸à¤à¤¬à¤à¤§à¥ à¤à¤à¤¨à¤¾à¤à¤',
    medical: 'à¤à¤¿à¤à¤¿à¤¤à¥à¤¸à¤¾',
    medicalDesc: 'à¤¸à¥à¤µà¤¾à¤¸à¥à¤¥à¥à¤¯ à¤à¤ªà¤¾à¤¤ à¤¸à¥à¤¥à¤¿à¤¤à¤¿',
    issue: 'à¤¸à¤®à¤¸à¥à¤¯à¤¾',
    issueDesc: 'à¤¸à¤¾à¤®à¤¾à¤¨à¥à¤¯ à¤¸à¥à¤°à¤à¥à¤·à¤¾ à¤à¤¿à¤à¤¤à¤¾à¤à¤',
    lostAndFound: 'à¤à¥à¤¯à¤¾ à¤à¤° à¤ªà¤¾à¤¯à¤¾',
    lostAndFoundDesc: 'à¤²à¤¾à¤ªà¤¤à¤¾ à¤µà¥à¤¯à¤à¥à¤¤à¤¿à¤¯à¥à¤ à¤¯à¤¾ à¤µà¤¸à¥à¤¤à¥à¤à¤ à¤à¥ à¤°à¤¿à¤ªà¥à¤°à¥à¤ à¤à¤°à¥à¤',
    theftHarassment: 'à¤à¥à¤°à¥ / à¤à¤¤à¥à¤ªà¥à¤¡à¤¼à¤¨',
    theftHarassmentDesc: 'à¤à¤ªà¤°à¤¾à¤§à¤¿à¤ à¤à¤¤à¤¿à¤µà¤¿à¤§à¤¿ à¤¯à¤¾ à¤¦à¥à¤°à¥à¤µà¥à¤¯à¤µà¤¹à¤¾à¤° à¤à¥ à¤°à¤¿à¤ªà¥à¤°à¥à¤ à¤à¤°à¥à¤',
    liveLocationSharing: 'à¤²à¤¾à¤à¤µ à¤²à¥à¤à¥à¤¶à¤¨ à¤¸à¤¾à¤à¤¾ à¤à¤°à¤¨à¤¾',
    currentLocation: 'à¤µà¤°à¥à¤¤à¤®à¤¾à¤¨ à¤¸à¥à¤¥à¤¾à¤¨',
    active: 'à¤¸à¤à¥à¤°à¤¿à¤¯',
    locationSharingDisabled: 'à¤¸à¥à¤¥à¤¾à¤¨ à¤¸à¤¾à¤à¤¾ à¤à¤°à¤¨à¤¾ à¤µà¤°à¥à¤¤à¤®à¤¾à¤¨ à¤®à¥à¤ à¤à¤à¥à¤·à¤® à¤¹à¥',
    shareLocation: 'à¤¸à¥à¤¥à¤¾à¤¨ à¤¸à¤¾à¤à¤¾ à¤à¤°à¥à¤',
    activeAlerts: 'à¤¸à¤à¥à¤°à¤¿à¤¯ à¤à¤²à¤°à¥à¤',
    lostPerson: 'à¤à¥à¤¯à¤¾ à¤¹à¥à¤ à¤µà¥à¤¯à¤à¥à¤¤à¤¿',
    team: 'à¤à¥à¤®:',
    police: 'à¤ªà¥à¤²à¤¿à¤¸',
    minsAgo: '{count} à¤®à¤¿à¤¨à¤ à¤ªà¤¹à¤²à¥',
    recentAlerts: 'à¤¹à¤¾à¤² à¤à¥ à¤à¤²à¤°à¥à¤',
    medicalEmergency: 'à¤à¤¿à¤à¤¿à¤¤à¥à¤¸à¤¾ à¤à¤ªà¤¾à¤¤à¤à¤¾à¤²',
    hoursAgo: '{count} à¤à¤à¤à¥ à¤ªà¤¹à¤²à¥',
    resolved: 'à¤¹à¤² à¤¹à¥ à¤à¤¯à¤¾',
    trafficAccident: 'à¤¯à¤¾à¤¤à¤¾à¤¯à¤¾à¤¤ à¤¦à¥à¤°à¥à¤à¤à¤¨à¤¾',
    emergencyContacts: 'à¤à¤ªà¤¾à¤¤à¤à¤¾à¤²à¥à¤¨ à¤¸à¤à¤ªà¤°à¥à¤',
    ambulance: 'à¤à¤®à¥à¤¬à¥à¤²à¥à¤à¤¸',
    call: 'à¤à¥à¤² à¤à¤°à¥à¤',
    fireBrigade: 'à¤à¤à¥à¤¨à¤¿à¤¶à¤®à¤¨ à¤¦à¤²',
    disasterManagement: 'à¤à¤ªà¤¦à¤¾ à¤ªà¥à¤°à¤¬à¤à¤§à¤¨',
    womensHelpline: 'à¤®à¤¹à¤¿à¤²à¤¾ à¤¹à¥à¤²à¥à¤ªà¤²à¤¾à¤à¤¨',
    childHelpline: 'à¤à¤¾à¤à¤²à¥à¤¡ à¤¹à¥à¤²à¥à¤ªà¤²à¤¾à¤à¤¨',
    incidentReport: 'à¤à¤à¤¨à¤¾ à¤à¥ à¤°à¤¿à¤ªà¥à¤°à¥à¤',
    yourRole: 'à¤à¤ªà¤à¥ à¤­à¥à¤®à¤¿à¤à¤¾',
    issueType: 'à¤¸à¤®à¤¸à¥à¤¯à¤¾ à¤à¤¾ à¤ªà¥à¤°à¤à¤¾à¤°',
    priorityLevel: 'à¤ªà¥à¤°à¤¾à¤¥à¤®à¤¿à¤à¤¤à¤¾ à¤¸à¥à¤¤à¤°',
    reportDetails: 'à¤°à¤¿à¤ªà¥à¤°à¥à¤ à¤à¤¾ à¤µà¤¿à¤µà¤°à¤£',
    locationPlaceholder: 'à¤à¤¦à¤¾., à¤®à¥à¤à¥à¤¯ à¤®à¤à¤ à¤à¥à¤·à¥à¤¤à¥à¤°, à¤à¤à¤¡ à¤, à¤¬à¥à¤¥ 3',
    descriptionPlaceholder: 'à¤à¥à¤ªà¤¯à¤¾ à¤¸à¤®à¤¸à¥à¤¯à¤¾ à¤à¤¾ à¤µà¤¿à¤¸à¥à¤¤à¤¾à¤° à¤¸à¥ à¤µà¤°à¥à¤£à¤¨ à¤à¤°à¥à¤...',
    chars: 'à¤à¤à¥à¤·à¤°',
    attachPhoto: 'à¤à¤ à¤¤à¤¸à¥à¤µà¥à¤° à¤¸à¤à¤²à¤à¥à¤¨ à¤à¤°à¥à¤ (à¤µà¥à¤à¤²à¥à¤ªà¤¿à¤)',
    clickToUpload: 'à¤à¤ªà¤²à¥à¤¡ à¤à¤°à¤¨à¥ à¤à¥ à¤²à¤¿à¤ à¤à¥à¤²à¤¿à¤ à¤à¤°à¥à¤',
    fileTypes: 'à¤ªà¥à¤à¤¨à¤à¥, à¤à¥à¤ªà¥à¤à¥, à¤¯à¤¾ à¤à¥à¤à¤à¤à¤«',
    submitReport: 'à¤°à¤¿à¤ªà¥à¤°à¥à¤ à¤à¤®à¤¾ à¤à¤°à¥à¤',
    visitor: 'à¤à¤à¤à¤¤à¥à¤',
    visitorDesc: 'à¤¸à¤¾à¤®à¤¾à¤¨à¥à¤¯ à¤à¤à¤à¤¤à¥à¤',
    security: 'à¤¸à¥à¤°à¤à¥à¤·à¤¾',
    securityDesc: 'à¤¸à¥à¤°à¤à¥à¤·à¤¾ à¤à¤°à¥à¤®à¥',
    volunteer: 'à¤¸à¥à¤µà¤¯à¤à¤¸à¥à¤µà¤',
    volunteerDesc: 'à¤à¤¾à¤°à¥à¤¯à¤à¥à¤°à¤® à¤¸à¥à¤µà¤¯à¤à¤¸à¥à¤µà¤',
    medicalStaff: 'à¤à¤¿à¤à¤¿à¤¤à¥à¤¸à¤¾ à¤à¤°à¥à¤®à¤à¤¾à¤°à¥',
    vendor: 'à¤µà¤¿à¤à¥à¤°à¥à¤¤à¤¾',
    vendorDesc: 'à¤µà¤¿à¤à¥à¤°à¥à¤¤à¤¾/à¤à¤°à¥à¤®à¤à¤¾à¤°à¥',
    galleryTitle: 'à¤à¥à¤²à¤°à¥',
    galleryModalTitle: 'à¤à¤µà¤¿ à¤ªà¥à¤°à¥à¤µà¤¾à¤µà¤²à¥à¤à¤¨',
    settingsTitle: 'à¤¸à¥à¤à¤¿à¤à¤à¥à¤¸',
    aboutTitle: 'à¤ªà¤¿à¤²à¥à¤à¥à¤°à¤¿à¤®à¤ªà¤¾à¤¥ à¤à¥ à¤¬à¤¾à¤°à¥ à¤®à¥à¤',
    underConstruction: 'à¤¨à¤¿à¤°à¥à¤®à¤¾à¤£à¤¾à¤§à¥à¤¨',
    galleryMessage: "à¤¯à¤¹ à¤ªà¥à¤·à¥à¤  à¤µà¤°à¥à¤¤à¤®à¤¾à¤¨ à¤®à¥à¤ à¤¨à¤¿à¤°à¥à¤®à¤¾à¤£à¤¾à¤§à¥à¤¨ à¤¹à¥à¥¤ à¤à¤²à¥à¤¦ à¤¹à¥, à¤à¤ª à¤à¤à¥à¤à¥à¤¨ à¤¸à¤¿à¤à¤¹à¤¸à¥à¤¥ à¤à¥ à¤à¥à¤¬à¤¸à¥à¤°à¤¤ à¤ªà¤²à¥à¤ à¤à¥ à¤à¤ à¤à¥à¤²à¤°à¥ à¤¬à¥à¤°à¤¾à¤à¤à¤¼ à¤à¤° à¤ªà¤¾à¤à¤à¤à¥à¥¤",
    aboutMessage: "à¤¯à¤¹ à¤ªà¥à¤·à¥à¤  à¤µà¤°à¥à¤¤à¤®à¤¾à¤¨ à¤®à¥à¤ à¤¨à¤¿à¤°à¥à¤®à¤¾à¤£à¤¾à¤§à¥à¤¨ à¤¹à¥à¥¤ à¤à¤²à¥à¤¦ à¤¹à¥, à¤à¤ªà¤à¥ à¤¯à¤¹à¤¾à¤ à¤ªà¤¿à¤²à¥à¤à¥à¤°à¤¿à¤®à¤ªà¤¾à¤¥ à¤®à¤¿à¤¶à¤¨, à¤¹à¤®à¤¾à¤°à¥ à¤à¥à¤® à¤à¤° à¤¸à¤à¤ªà¤°à¥à¤ à¤µà¤¿à¤µà¤°à¤£ à¤à¥ à¤¬à¤¾à¤°à¥ à¤®à¥à¤ à¤à¤¾à¤¨à¤à¤¾à¤°à¥ à¤®à¤¿à¤²à¥à¤à¥à¥¤",
    notifications: 'à¤¸à¥à¤à¤¨à¤¾à¤à¤',
    toggleNotifications: 'à¤¸à¥à¤à¤¨à¤¾à¤à¤ à¤à¥à¤à¤² à¤à¤°à¥à¤',
    medicalEmergencyResolved: 'à¤à¤¿à¤à¤¿à¤¤à¥à¤¸à¤¾ à¤à¤ªà¤¾à¤¤à¤à¤¾à¤² à¤¹à¤² à¤¹à¥ à¤à¤¯à¤¾',
    medicalEmergencyResolvedDesc: 'à¤°à¤¾à¤® à¤à¤¾à¤ à¤à¥ à¤ªà¤¾à¤¸ à¤à¥ à¤à¤à¤¨à¤¾ à¤à¥ à¤®à¤à¤à¥à¤°à¥ à¤¦à¥ à¤¦à¥ à¤à¤ à¤¹à¥à¥¤',
    viewAll: 'à¤¸à¤­à¥ à¤¦à¥à¤à¥à¤',
    closeNotification: 'à¤¸à¥à¤à¤¨à¤¾ à¤¬à¤à¤¦ à¤à¤°à¥à¤',
    voiceSearch: 'à¤à¤µà¤¾à¤ à¤¸à¥ à¤à¥à¤à¥à¤',
    generalSettings: 'à¤¸à¤¾à¤®à¤¾à¤¨à¥à¤¯',
    theme: 'à¤¥à¥à¤®',
    light: 'à¤²à¤¾à¤à¤',
    dark: 'à¤¡à¤¾à¤°à¥à¤',
    system: 'à¤¸à¤¿à¤¸à¥à¤à¤®',
    notificationSettings: 'à¤à¤§à¤¿à¤¸à¥à¤à¤¨à¤¾ à¤¸à¥à¤à¤¿à¤à¤à¥à¤¸',
    crowdAlerts: 'à¤­à¥à¤¡à¤¼ à¤à¤²à¤°à¥à¤',
    bookingConfirmations: 'à¤¬à¥à¤à¤¿à¤à¤ à¤ªà¥à¤·à¥à¤à¤¿',
    emergencyUpdates: 'à¤à¤ªà¤¾à¤¤à¤à¤¾à¤²à¥à¤¨ à¤à¤ªà¤¡à¥à¤',
    accountSettings: 'à¤à¤¾à¤¤à¤¾',
    loggedInAs: 'à¤à¥ à¤°à¥à¤ª à¤®à¥à¤ à¤²à¥à¤ à¤à¤¨',
    pilgrim: 'à¤¤à¥à¤°à¥à¤¥à¤¯à¤¾à¤¤à¥à¤°à¥',
    editProfile: 'à¤ªà¥à¤°à¥à¤«à¤¼à¤¾à¤à¤² à¤¸à¤à¤ªà¤¾à¤¦à¤¿à¤¤ à¤à¤°à¥à¤',
    changePassword: 'à¤ªà¤¾à¤¸à¤µà¤°à¥à¤¡ à¤¬à¤¦à¤²à¥à¤',
    logout: 'à¤²à¥à¤ à¤à¤à¤',
    ourMission: 'à¤¹à¤®à¤¾à¤°à¤¾ à¤²à¤à¥à¤·à¥à¤¯',
    ourMissionDesc: 'à¤¨à¤µà¥à¤¨ à¤ªà¥à¤°à¥à¤¦à¥à¤¯à¥à¤à¤¿à¤à¥ à¤à¤° à¤µà¤¾à¤¸à¥à¤¤à¤µà¤¿à¤ à¤¸à¤®à¤¯ à¤à¥ à¤à¤¾à¤¨à¤à¤¾à¤°à¥ à¤à¥ à¤®à¤¾à¤§à¥à¤¯à¤® à¤¸à¥ à¤à¤à¥à¤à¥à¤¨ à¤¸à¤¿à¤à¤¹à¤¸à¥à¤¥ à¤®à¥à¤ à¤ªà¥à¤°à¤¤à¥à¤¯à¥à¤ à¤¤à¥à¤°à¥à¤¥à¤¯à¤¾à¤¤à¥à¤°à¥ à¤à¥ à¤²à¤¿à¤ à¤à¤ à¤¸à¥à¤°à¤à¥à¤·à¤¿à¤¤, à¤¨à¤¿à¤°à¥à¤¬à¤¾à¤§ à¤à¤° à¤à¤§à¥à¤¯à¤¾à¤¤à¥à¤®à¤¿à¤ à¤°à¥à¤ª à¤¸à¥ à¤¸à¤®à¥à¤¦à¥à¤§ à¤à¤¨à¥à¤­à¤µ à¤ªà¥à¤°à¤¦à¤¾à¤¨ à¤à¤°à¤¨à¤¾à¥¤',
    ourTech: 'à¤¹à¤®à¤¾à¤°à¥ à¤¤à¤à¤¨à¥à¤',
    ourTechDesc1: 'à¤ªà¤¿à¤²à¥à¤à¥à¤°à¤¿à¤®à¤ªà¤¾à¤¥ à¤à¤ à¤à¤§à¥à¤¨à¤¿à¤, à¤à¤¤à¥à¤¤à¤°à¤¦à¤¾à¤¯à¥ à¤µà¥à¤¬ à¤¸à¥à¤à¥à¤ à¤ªà¤° à¤¬à¤¨à¤¾à¤¯à¤¾ à¤à¤¯à¤¾ à¤¹à¥, à¤à¥ à¤à¤¿à¤¸à¥ à¤­à¥ à¤¡à¤¿à¤µà¤¾à¤à¤¸ à¤ªà¤° à¤à¤ à¤¤à¥à¤à¤¼ à¤à¤° à¤µà¤¿à¤¶à¥à¤µà¤¸à¤¨à¥à¤¯ à¤à¤¨à¥à¤­à¤µ à¤¸à¥à¤¨à¤¿à¤¶à¥à¤à¤¿à¤¤ à¤à¤°à¤¤à¤¾ à¤¹à¥à¥¤ à¤¹à¤® à¤²à¤¾à¤à¤µ à¤­à¥à¤¡à¤¼ à¤à¥ à¤¨à¤¿à¤à¤°à¤¾à¤¨à¥ à¤à¤° à¤¤à¤¤à¥à¤à¤¾à¤² à¤à¤²à¤°à¥à¤ à¤à¥ à¤²à¤¿à¤ à¤°à¥à¤¯à¤²-à¤à¤¾à¤à¤® à¤¡à¥à¤à¤¾ à¤ªà¥à¤°à¥à¤¸à¥à¤¸à¤¿à¤à¤ à¤à¤¾ à¤²à¤¾à¤­ à¤à¤ à¤¾à¤¤à¥ à¤¹à¥à¤à¥¤',
    ourTechDesc2: 'à¤¹à¤®à¤¾à¤°à¥ à¤®à¥à¤à¥à¤¯ à¤µà¤¿à¤¶à¥à¤·à¤¤à¤¾à¤à¤ à¤à¤¨à¥à¤¨à¤¤ à¤à¤à¤ à¤¦à¥à¤µà¤¾à¤°à¤¾ à¤¸à¤à¤à¤¾à¤²à¤¿à¤¤ à¤¹à¥à¤, à¤à¤¿à¤¸à¤®à¥à¤ à¤¸à¤¹à¤ à¤¸à¤à¤ªà¤°à¥à¤ à¤à¥ à¤²à¤¿à¤ à¤µà¥à¤¯à¤¸-à¤¸à¤à¥à¤·à¤® à¤¸à¤¹à¤¾à¤¯à¤ à¤à¤° à¤¸à¤¬à¤¸à¥ à¤¸à¥à¤°à¤à¥à¤·à¤¿à¤¤ à¤°à¤¾à¤¸à¥à¤¤à¥à¤ à¤à¤¾ à¤¸à¥à¤à¤¾à¤µ à¤¦à¥à¤¨à¥ à¤à¥ à¤²à¤¿à¤ à¤¬à¥à¤¦à¥à¤§à¤¿à¤®à¤¾à¤¨ à¤°à¥à¤ING à¤à¤²à¥à¤à¥à¤°à¤¿à¤¦à¤® à¤¶à¤¾à¤®à¤¿à¤² à¤¹à¥à¤à¥¤',
    theApp: 'à¤ªà¤¿à¤²à¥à¤à¥à¤°à¤¿à¤®à¤ªà¤¾à¤¥ à¤à¤ª',
    theAppDesc: 'à¤à¤à¥à¤à¥à¤¨ à¤¸à¤¿à¤à¤¹à¤¸à¥à¤¥ à¤à¥ à¤²à¤¿à¤ à¤à¤ªà¤à¤¾ à¤à¤²-à¤à¤¨-à¤µà¤¨ à¤¡à¤¿à¤à¤¿à¤à¤² à¤¸à¤¾à¤¥à¥à¥¤',
    keyFeatures: 'à¤ªà¥à¤°à¤®à¥à¤ à¤µà¤¿à¤¶à¥à¤·à¤¤à¤¾à¤à¤',
    featureNav: 'à¤µà¤¾à¤¸à¥à¤¤à¤µà¤¿à¤ à¤¸à¤®à¤¯ à¤¨à¥à¤µà¤¿à¤à¥à¤¶à¤¨ à¤à¤° à¤­à¥à¤¡à¤¼ à¤à¥ à¤à¤¾à¤¨à¤à¤¾à¤°à¥',
    featureBooking: 'à¤à¤¸à¤¾à¤¨ à¤ªà¤°à¤¿à¤µà¤¹à¤¨ à¤à¤° à¤°à¤¹à¤¨à¥ à¤à¥ à¤¬à¥à¤à¤¿à¤à¤',
    featureEmergency: 'à¤¤à¤¤à¥à¤à¤¾à¤² à¤à¤¸à¤à¤à¤¸ à¤à¤° à¤à¤ªà¤¾à¤¤à¤à¤¾à¤²à¥à¤¨ à¤¸à¥à¤µà¤¾à¤à¤',
    meetTheTeam: 'à¤¹à¤®à¤¾à¤°à¥ à¤à¥à¤® à¤¸à¥ à¤®à¤¿à¤²à¥à¤',
    teamMember1Name: 'à¤à¤°à¤µ à¤¶à¤°à¥à¤®à¤¾',
    teamMember1Role: 'à¤ªà¥à¤°à¤®à¥à¤ à¤¡à¥à¤µà¤²à¤ªà¤°',
    teamMember2Name: 'à¤ªà¥à¤°à¤¿à¤¯à¤¾ à¤®à¥à¤¹à¤¤à¤¾',
    teamMember2Role: 'à¤¯à¥à¤à¤à¥à¤¸/à¤¯à¥à¤à¤ à¤¡à¤¿à¤à¤¾à¤à¤¨à¤°',
    teamMember3Name: 'à¤°à¥à¤¹à¤¨ à¤¦à¥à¤¸à¤¾à¤',
    teamMember3Role: 'à¤à¤à¤ à¤à¤° à¤¡à¥à¤à¤¾ à¤µà¥à¤à¥à¤à¤¾à¤¨à¤¿à¤',
    todaysHighlights: 'à¤à¤ à¤à¥ à¤®à¥à¤à¥à¤¯ à¤à¤à¤°à¥à¤·à¤£',
    mainEvent: 'à¤®à¥à¤à¥à¤¯ à¤à¤¾à¤°à¥à¤¯à¤à¥à¤°à¤®:',
    eveningAarti: 'à¤°à¤¾à¤® à¤à¤¾à¤ à¤ªà¤° à¤¸à¤à¤§à¥à¤¯à¤¾ à¤à¤°à¤¤à¥',
    weather: 'à¤®à¥à¤¸à¤®:',
    weatherInfo: '28Â°C, à¤¸à¤¾à¤«à¤¼ à¤à¤à¤¾à¤¶',
    filters: 'à¤«à¤¼à¤¿à¤²à¥à¤à¤°',
    busType: 'à¤¬à¤¸ à¤à¤¾ à¤ªà¥à¤°à¤à¤¾à¤°',
    ac: 'à¤à¤¸à¥',
    nonAc: 'à¤à¥à¤°-à¤à¤¸à¥',
    sleeper: 'à¤¸à¥à¤²à¥à¤ªà¤°',
    amenities: 'à¤¸à¥à¤µà¤¿à¤§à¤¾à¤à¤',
    wifi: 'à¤µà¤¾à¤-à¤«à¤¾à¤',
    chargingPort: 'à¤à¤¾à¤°à¥à¤à¤¿à¤à¤ à¤ªà¥à¤°à¥à¤',
    applyFilters: 'à¤«à¤¼à¤¿à¤²à¥à¤à¤° à¤²à¤¾à¤à¥ à¤à¤°à¥à¤',
    propertyType: 'à¤¸à¤à¤ªà¤¤à¥à¤¤à¤¿ à¤à¤¾ à¤ªà¥à¤°à¤à¤¾à¤°',
    hotel: 'à¤¹à¥à¤à¤²',
    dormitory: 'à¤à¤¾à¤¤à¥à¤°à¤¾à¤µà¤¾à¤¸',
    priceRange: 'à¤®à¥à¤²à¥à¤¯ à¤¸à¥à¤®à¤¾ (à¤à¤§à¤¿à¤à¤¤à¤®)',
    sortBy: 'à¤à¤¸à¤à¥ à¤à¤¨à¥à¤¸à¤¾à¤° à¤à¥à¤°à¤®à¤¬à¤¦à¥à¤§ à¤à¤°à¥à¤:',
    priceLowHigh: 'à¤à¥à¤®à¤¤: à¤à¤® à¤¸à¥ à¤à¥à¤¯à¤¾à¤¦à¤¾',
    priceHighLow: 'à¤à¥à¤®à¤¤: à¤à¥à¤¯à¤¾à¤¦à¤¾ à¤¸à¥ à¤à¤®',
    rating: 'à¤°à¥à¤à¤¿à¤à¤',
    guestRating: 'à¤à¤¤à¤¿à¤¥à¤¿ à¤°à¥à¤à¤¿à¤à¤',
    any: 'à¤à¥à¤ à¤­à¥',
    excellent4_5: 'à¥ª.à¥«+ à¤à¤¤à¥à¤à¥à¤·à¥à¤',
    veryGood4: 'à¥ª.à¥¦+ à¤¬à¤¹à¥à¤¤ à¤à¤à¥à¤à¤¾',
    roomService: 'à¤à¤®à¤°à¥ à¤à¥ à¤¸à¥à¤µà¤¾',
    templeView: 'à¤®à¤à¤¦à¤¿à¤° à¤à¤¾ à¤¦à¥à¤¶à¥à¤¯',
    waterBottle: 'à¤ªà¤¾à¤¨à¥ à¤à¥ à¤¬à¥à¤¤à¤²',
    userLogin: 'à¤à¤ªà¤¯à¥à¤à¤à¤°à¥à¤¤à¤¾ à¤²à¥à¤à¤¿à¤¨',
    adminLogin: 'à¤à¤¡à¤®à¤¿à¤¨ à¤²à¥à¤à¤¿à¤¨',
    loginPrompt: 'à¤à¤ªà¤¨à¥ {type} à¤à¤¾à¤¤à¥ à¤®à¥à¤ à¤²à¥à¤à¤¿à¤¨ à¤à¤°à¥à¤',
    user: 'à¤à¤ªà¤¯à¥à¤à¤à¤°à¥à¤¤à¤¾',
    admin: 'à¤à¤¡à¤®à¤¿à¤¨',
    emailAddress: 'à¤à¤®à¥à¤² à¤ªà¤¤à¤¾',
    password: 'à¤ªà¤¾à¤¸à¤µà¤°à¥à¤¡',
    forgotPassword: 'à¤ªà¤¾à¤¸à¤µà¤°à¥à¤¡ à¤­à¥à¤² à¤à¤?',
    login: 'à¤²à¥à¤à¤¿à¤¨',
    noAccountPrompt: 'à¤à¤¾à¤¤à¤¾ à¤¨à¤¹à¥à¤ à¤¹à¥?',
    signUp: 'à¤¸à¤¾à¤à¤¨ à¤à¤ª à¤à¤°à¥à¤',
    analyticsTitle: 'à¤à¤¨à¤¾à¤²à¤¿à¤à¤¿à¤à¥à¤¸ à¤¡à¥à¤¶à¤¬à¥à¤°à¥à¤¡',
    liveCrowdCount: 'à¤²à¤¾à¤à¤µ à¤­à¥à¤¡à¤¼ à¤à¤£à¤¨à¤¾',
    bookingsToday: 'à¤à¤ à¤à¥ à¤¬à¥à¤à¤¿à¤à¤',
    incidentsToday: 'à¤à¤ à¤à¥ à¤à¤à¤¨à¤¾à¤à¤',
    bookingTrends: 'à¤¬à¥à¤à¤¿à¤à¤ à¤à¥à¤°à¥à¤à¤¡à¥à¤¸',
    past7Days: 'à¤ªà¤¿à¤à¤²à¥ 7 à¤¦à¤¿à¤¨',
    incidentReports: 'à¤à¤à¤¨à¤¾ à¤°à¤¿à¤ªà¥à¤°à¥à¤',
    byType: 'à¤ªà¥à¤°à¤à¤¾à¤° à¤à¥ à¤à¤¨à¥à¤¸à¤¾à¤°',
    peakHours: 'à¤­à¥à¤¡à¤¼ à¤à¥ à¤à¤°à¤® à¤à¤à¤à¥',
    peakHoursDesc: 'à¤ªà¥à¤°à¤µà¥à¤¶ à¤¡à¥à¤à¤¾ à¤à¥ à¤à¤§à¤¾à¤° à¤ªà¤° à¤­à¥à¤¡à¤¼ à¤à¤¾ à¤µà¤¿à¤¤à¤°à¤£',
  },
};

interface I18nContextType {
  language: Language;
  setLanguage: (lang: Language) => void;
  t: (key: string, params?: { [key: string]: string | number }) => string;
}

const I18nContext = createContext<I18nContextType | undefined>(undefined);

export const I18nProvider: React.FC<{ children: ReactNode }> = ({ children }) => {
  const [language, setLanguage] = useState<Language>(() => {
    if (typeof window !== 'undefined' && window.localStorage) {
        return (localStorage.getItem('language') as Language) || 'en';
    }
    return 'en';
  });

  useEffect(() => {
    if (typeof window !== 'undefined' && window.localStorage) {
      localStorage.setItem('language', language);
    }
  }, [language]);

  const t = (key: string, params: { [key: string]: string | number } = {}): string => {
    let translation = resources[language][key] || key;
    Object.keys(params).forEach(paramKey => {
        translation = translation.replace(`{${paramKey}}`, String(params[paramKey]));
    });
    return translation;
  };

  // FIX: Replace JSX with React.createElement to support usage in a .ts file.
  return React.createElement(I18nContext.Provider, { value: { language, setLanguage, t } }, children);
};

export const useI18n = (): I18nContextType => {
  const context = useContext(I18nContext);
  if (!context) {
    throw new Error('useI18n must be used within an I18nProvider');
  }
  return context;
};